---
apiVersion: v1
kind: Service
metadata:
  name: envoy-proxy
  labels:
    app: envoy-proxy
spec:
  type: NodePort
  selector:
    app: envoy-proxy
  ports:
    - port: 8080
      name: app
      targetPort: 8080
      nodePort: 30050
      protocol: TCP
    - port: 9901
      name: admin
      targetPort: 9901
      nodePort: 30090
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-proxy
  labels:
    app: envoy-proxy
spec:
  selector:
    matchLabels:
      app: envoy-proxy
  replicas: 1
  template:
    metadata:
      labels:
        app: envoy-proxy
    spec:
      volumes:
        - name: envoy-config-yaml
          configMap:
            name: envoy-config
      containers:
        - name: envoy-proxy
          image: envoyproxy/envoy:v1.16-latest
          command:
            - "/usr/local/bin/envoy"
          args:
            - "--config-path /etc/envoy/envoy.yaml"
          resources:
            limits:
              memory: 512Mi
          ports:
            - containerPort: 8080
              name: app
            - containerPort: 9901
              name: admin 
          volumeMounts:
            - name: envoy-config-yaml
              mountPath: "/etc/envoy/"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  # Adding new entries here will make them appear as files in the deployment.
  # Please update k8s.io/k8s.io/README.md when you update this file
  envoy.yaml: |
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 8080 }
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/" }
                    route:
                      cluster: echo_service
                      max_grpc_timeout: 0s
                  cors:
                    allow_origin_string_match:
                    - prefix: "*"
                    allow_methods: GET, PUT, DELETE, POST, OPTIONS
                    allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                    max_age: "1728000"
                    expose_headers: custom-header-1,grpc-status,grpc-message
              http_filters:
              - name: envoy.grpc_web
              - name: envoy.cors
              - name: envoy.router
      clusters:
      - name: echo_service
        connect_timeout: 0.25s
        type: logical_dns
        http2_protocol_options: {}
        lb_policy: round_robin
        hosts: [{ socket_address: {address: calendar-module-kube, port_value: 80}}]
